syntax = "proto3";

// =============================================
// Client Configuration
// =============================================

// Centralized client configuration parameters
message WebConfig {
    // User-specific preferences
    message UserConfig {
        // Geographical home point
        message HomePoint {
            float lon = 1;
            float lat = 2;
        }

        uint64 id = 1;  // User ID
        string display_name = 2;  // User display name
        bool activity_tracking = 3;  // Enable usage analytics
        bool crash_reporting = 4;  // Enable automatic error reports
        optional HomePoint home_point = 5;  // User's home point
    }

    // Sentry configuration
    message SentryConfig {
        string dsn = 1;  // Sentry DSN
        float traces_sample_rate = 2;  // Traces sampling rate
    }

    optional UserConfig user_config = 1;  // User preferences override
    optional SentryConfig sentry_config = 2;  // Sentry configuration
    string version = 3;  // Application version
    string env = 4;  // Environment mode (dev, test, prod)
    string api_url = 5;  // Base URL for making API requests
    float map_query_area_max_size = 6;  // Max sq km for map data queries
    float note_query_area_max_size = 7;  // Max sq km for note queries
}

// Password transmission container for different schema versions
message TransmitUserPassword {
    optional string legacy = 1;  // Unencrypted password (deprecated)
    optional bytes v1 = 2;  // Client-side PBKDF2 hash digest
}

// =============================================
// Geographical Data Structures
// =============================================

// Axis-aligned geographical bounding box
message SharedBounds {
    float min_lon = 1;  // Minimum longitude
    float min_lat = 2;  // Minimum latitude
    float max_lon = 3;  // Maximum longitude
    float max_lat = 4;  // Maximum latitude
}

// =============================================
// Rendering Data Structures
// =============================================

// OSM elements to render on map (nodes/ways)
message RenderElementsData {
    // Node representation
    message Node {
        uint64 id = 1;  // Node ID
        float lon = 2;  // Longitude
        float lat = 3;  // Latitude
    }

    // Way representation
    message Way {
        uint64 id = 1;  // Way ID
        string line = 2;  // Encoded polyline coordinates
        bool area = 3;  // Whether to render as closed area
    }

    repeated Node nodes = 1;  // Nodes in current query
    repeated Way ways = 2;  // Ways in current query
    optional bool too_much_data = 3;  // Error flag for too large responses
}

// Changeset metadata for rendering in UI timeline
message RenderChangesetsData {
    // Single changeset in the rendering set
    message Changeset {
        // User attribution information
        message User {
            string name = 1;  // Display name
            string avatar_url = 2;  // Profile image URL
        }

        uint64 id = 1;  // Changeset ID
        optional User user = 2;  // Author information
        repeated SharedBounds bounds = 3;  // Affected map areas
        bool closed = 4;  // Whether changeset is closed
        string timeago = 5;  // Human-readable timestamp HTML
        optional string comment = 6;  // Commit message
        uint32 num_create = 7;  // Number of created elements
        uint32 num_modify = 8;  // Number of modified elements
        uint32 num_delete = 9;  // Number of deleted elements
        uint64 num_comments = 10;  // Associated discussion count
    }

    repeated Changeset changesets = 1;  // Changesets in current query
}

// OpenStreetMap notes for rendering on map
message RenderNotesData {
    // Single map note representation
    message Note {
        uint64 id = 1;  // Note ID
        float lon = 2;  // Longitude
        float lat = 3;  // Latitude
        string text = 4;  // Plain-text content
        string status = 5;  // Current status (open, closed, hidden)
    }

    repeated Note notes = 1;  // Notes in current query
}

// =============================================
// Routing & Navigation
// =============================================

// Turn-by-turn navigation instructions
message RoutingResult {
    // Start/end location metadata
    message Endpoint {
        string name = 1;  // Location display name
        SharedBounds bounds = 2;  // Approximate endpoint area
        float lon = 3;  // Precise longitude
        float lat = 4;  // Precise latitude
    }

    // Single navigation instruction step
    message Step {
        uint32 num_coords = 1;  // Number of coordinates in the polyline (incl. overlapping ends)
        float distance = 2;  // Meters
        float time = 3;  // Seconds
        uint32 icon_num = 4;  // Icon code for this instruction
        string text = 5;  // Human-readable instruction
    }

    // Elevation profile summary
    message Elevation {
        float ascend = 1;  // Total meters climbed
        float descend = 2;  // Total meters descended
    }

    optional Endpoint start = 1;  // Route origin
    optional Endpoint end = 2;  // Route destination
    string attribution = 3;  // Data provider attribution
    repeated Step steps = 4;  // Navigation steps
    uint32 line_quality = 5;  // Quality of the polyline encoding
    string line = 6;  // Encoded polyline for the route
    optional Elevation elevation = 7;  // Terrain metrics
}

// =============================================
// Pagination Cursors
// =============================================

// Cursor tracks pagination state for API data fetching operations
message Cursor {
    uint64 id = 1;  // Last fetched object's database identifier
    optional uint64 timestamp = 2;  // Optional timestamp for point-in-time pagination
}

// A compact container with anchors for each page boundary
message PageCursors {
    repeated Cursor anchors = 1;
}

// =============================================
// UI Element Metadata
// =============================================

// Icon with tooltip for map elements
message ElementIcon {
    string icon = 1;  // Icon URL
    string title = 2;  // Accessible tooltip text
}

// =============================================
// Partial Response Structures
// =============================================

// Partial changeset response params
message PartialChangesetParams {
    // Versioned OSM element reference
    message Element {
        uint64 id = 1;  // Object ID
        uint64 version = 2;  // Object version
        bool visible = 3;  // Whether element is visible
        optional string name = 4;  // Localized display name
        optional ElementIcon icon = 5;  // Associated icon visualization
    }

    uint64 id = 1;  // Changeset ID
    repeated SharedBounds bounds = 2;  // Geographical scope
    repeated Element nodes = 3;  // Modified nodes
    repeated Element ways = 4;  // Modified ways
    repeated Element relations = 5;  // Modified relations
}

// Partial element response params
message PartialElementParams {
    // Hierarchical element relationship entry
    message Entry {
        string type = 1;  // "node", "way", or "relation"
        uint64 id = 2;  // OSM ID
        optional string role = 3;  // Relation member role
        optional string name = 4;  // Localized display name
        optional ElementIcon icon = 5;  // Associated visualization
    }

    string type = 1;  // Primary element type
    repeated Entry members = 2;  // Child elements (for ways and relations)
    repeated Entry parents = 3;  // Parent elements
    RenderElementsData render = 4;  // Visual representation data
}

// Partial note response params
message PartialNoteParams {
    uint64 id = 1;  // Note ID
    float lon = 2;  // Longitude
    float lat = 3;  // Latitude
    string status = 4;  // Current status (open, closed, hidden)
}

// Partial query features response params
message PartialQueryFeaturesParams {
    repeated RenderElementsData renders = 1;  // Visual representation data
}

// Partial search response params
message PartialSearchParams {
    optional string bounds_str = 1;  // Bounding box in "minlon,minlat,maxlon,maxlat" format
    repeated RenderElementsData renders = 2;  // Search results visual representation
    bool where_is_this = 3;  // Whether the search was performed in "Where is this?" mode
}
